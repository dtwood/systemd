#!/usr/bin/sh
# -*- mode: shell-script; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# ex: ts=8 sw=4 sts=4 et filetype=sh
# SPDX-License-Identifier: LGPL-2.1-or-later
#
# This file is part of systemd.
#
# systemd is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# systemd is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with systemd; If not, see <https://www.gnu.org/licenses/>.

set -e

COMMAND="${1:?}"
KERNEL_VERSION="${2:?}"
# shellcheck disable=SC2034
ENTRY_DIR_ABS="$3"
KERNEL_IMAGE="$4"

ENTRY_TOKEN="$KERNEL_INSTALL_ENTRY_TOKEN"
BOOT_ROOT="$KERNEL_INSTALL_BOOT_ROOT"

PCRLOCK_DIR="/var/lib/pcrlock.d/650-kernel.pcrlock.d/"
PCRLOCK_FILE="$PCRLOCK_DIR/$KERNEL_VERSION.pcrlock"

case "$COMMAND" in
    remove)
        [ "$KERNEL_INSTALL_VERBOSE" -gt 0 ] && \
            echo "Removing $PCRLOCK_FILE"
        exec rm -f \
            "$PCRLOCK_FILE" \
        ;;
    add)
        ;;
    *)
        exit 0
        ;;
esac

[ "$KERNEL_INSTALL_LAYOUT" = "uki" ] || exit 0

if ! [ -d "$PCRLOCK_DIR" ]; then
    [ "$KERNEL_INSTALL_VERBOSE" -gt 0 ] && echo "creating $PCRLOCK_DIR"
    mkdir -p "$PCRLOCK_DIR"
fi


# If there is a UKI named uki.efi on the staging area use that, if not use what
# was passed in as $KERNEL_IMAGE but insist it has a .efi extension
if [ -f "$KERNEL_INSTALL_STAGING_AREA/uki.efi" ]; then
    [ "$KERNEL_INSTALL_VERBOSE" -gt 0 ] && echo "Writing PCR predictions from $KERNEL_INSTALL_STAGING_AREA/uki.efi to $PCRLOCK_FILE"
    /usr/lib/systemd/systemd-pcrlock lock-uki "$KERNEL_INSTALL_STAGING_AREA/uki.efi" --pcrlock="$PCRLOCK_FILE" || {
        echo "Error: could not write PCR predictions from '$KERNEL_INSTALL_STAGING_AREA/uki.efi' to '$PCRLOCK_FILE'." >&2
        exit 1
    }
elif [ -n "$KERNEL_IMAGE" ]; then
    [ -f "$KERNEL_IMAGE" ] || {
        echo "Error: UKI '$KERNEL_IMAGE' not a file." >&2
        exit 1
    }
    [ "$KERNEL_IMAGE" != "${KERNEL_IMAGE%*.efi}.efi" ] && {
        echo "Error: $KERNEL_IMAGE is missing .efi suffix." >&2
        exit 1
    }
    [ "$KERNEL_INSTALL_VERBOSE" -gt 0 ] && echo "Writing PCR predictions from $KERNEL_IMAGE to $PCRLOCK_FILE"
    /usr/lib/systemd/systemd-pcrlock lock-uki "$KERNEL_IMAGE" --pcrlock="$PCRLOCK_FILE" || {
        echo "Error: could not write PCR predictions from '$KERNEL_IMAGE' to '$PCRLOCK_FILE'." >&2
        exit 1
    }
else
    [ "$KERNEL_INSTALL_VERBOSE" -gt 0 ] && echo "No UKI available. Nothing to do."
    exit 0
fi
chown root:root "$PCRLOCK_FILE" || :

exit 0
